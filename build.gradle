/*
 * PLGUINS: apply all plugins needed for the build
 */
plugins {
    id "com.jfrog.bintray" version "1.8.1"
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'eclipse'
}

/*
 * VERSIONING: describe build and calculate build number
 */
description = """Toys & Games"""
group = 'uk.dangrew'

def buildNumberFromEnvironment = System.getenv()['VERSION_NUMBER']
def buildNumberForThisEnvironment = (buildNumberFromEnvironment != null ? buildNumberFromEnvironment : 'WORKSPACE-1')
version = buildNumberForThisEnvironment

/*
 * SOURCE: source specific configuration
 */
sourceCompatibility = 11
targetCompatibility = 11

javafx {
    version = "11"
    modules = ['javafx.base', 'javafx.controls', 'javafx.media', 'javafx.graphics']
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
        resources {
//resources are dotted through the folder - arguably against conventions
            srcDir 'src'
            srcDir 'test'
        }
    }
}

/*
 * DEPENDENCIES: define repos for resolving and dependencies to resolve
 */
repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/dangrew/dag-kode" }
    maven { url "http://dl.bintray.com/dangrew/SystemDigest" }
    maven { url "http://dl.bintray.com/dangrew/JsonUpgradingPersistenceArchitecture" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'uk.dangrew', name: 'dag-kode', version: '1.1.71'
    compile group: 'SystemDigest', name: 'SystemDigest', version: '1.3.15'
    compile group: 'jupa', name: 'JsonUpgradingPersistenceArchitecture', version: '1.3.11'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.11'
    compile group: 'dom4j', name: 'dom4j', version: '1.6.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.1.2'
    compile group: 'org.json', name: 'json', version: '20151123'

    compile 'de.jensd:fontawesomefx-materialicons:2.2.0-9.1.2'
    compile group: 'de.jensd', name: 'fontawesomefx-fontawesome', version: '4.7.0-9.1.2'

    testCompile group: 'uk.dangrew', name: 'dag-kode', version: '1.1.71', classifier: 'tests'
    testCompile group: 'jupa', name: 'JsonUpgradingPersistenceArchitecture', version: '1.3.11', classifier: 'tests'
    testCompile group: 'SystemDigest', name: 'SystemDigest', version: '1.3.15', classifier: 'tests'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.7.0'
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.0.5'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
}

/*
 * UNIT TESTS: configure reports and scope of tests
 */
test {
    filter {
//test intermingled unit + integ - arguably against conventions
        includeTestsMatching "*Test"
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    reports {
        junitXml.enabled = true
        html.enabled = false
    }
}

/*
 * INTEGRATION TESTS: configure reports and scope of tests
 */
task integrationTests(type: Test) {
    filter {
        includeTestsMatching "*IT"
    }

    testLogging.events = test.testLogging.events
    reports.junitXml.enabled = test.reports.junitXml.enabled
    reports.html.enabled = test.reports.html.enabled
}
check.dependsOn integrationTests

/*
 * TEST PACKAGING: packaging tests
 */
task packageTests(type: Jar) {
    from sourceSets.test.output
    classifier = 'tests'
}
artifacts.archives packageTests


